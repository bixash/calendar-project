
//====Source: https://www.nepalitrends.com/tools/js/date-converter.min.js===//
const nepaliDates={
    0:[2e3,30,32,31,32,31,30,30,30,29,30,29,31],
    1:[2001,31,31,32,31,31,31,30,29,30,29,30,30],
    2:[2002,31,31,32,32,31,30,30,29,30,29,30,30],
    3:[2003,31,32,31,32,31,30,30,30,29,29,30,31],
    4:[2004,30,32,31,32,31,30,30,30,29,30,29,31],
    5:[2005,31,31,32,31,31,31,30,29,30,29,30,30],
    6:[2006,31,31,32,32,31,30,30,29,30,29,30,30],
    7:[2007,31,32,31,32,31,30,30,30,29,29,30,31],
    8:[2008,31,31,31,32,31,31,29,30,30,29,29,31],
    9:[2009,31,31,32,31,31,31,30,29,30,29,30,30],
    10:[2010,31,31,32,32,31,30,30,29,30,29,30,30],
    11:[2011,31,32,31,32,31,30,30,30,29,29,30,31],
    12:[2012,31,31,31,32,31,31,29,30,30,29,30,30],
    13:[2013,31,31,32,31,31,31,30,29,30,29,30,30],
    14:[2014,31,31,32,32,31,30,30,29,30,29,30,30],
    15:[2015,31,32,31,32,31,30,30,30,29,29,30,31],
    16:[2016,31,31,31,32,31,31,29,30,30,29,30,30],
    17:[2017,31,31,32,31,31,31,30,29,30,29,30,30],
    18:[2018,31,32,31,32,31,30,30,29,30,29,30,30],
    19:[2019,31,32,31,32,31,30,30,30,29,30,29,31],
    20:[2020,31,31,31,32,31,31,30,29,30,29,30,30],
    21:[2021,31,31,32,31,31,31,30,29,30,29,30,30],
    22:[2022,31,32,31,32,31,30,30,30,29,29,30,30],
    23:[2023,31,32,31,32,31,30,30,30,29,30,29,31],
    24:[2024,31,31,31,32,31,31,30,29,30,29,30,30],
    25:[2025,31,31,32,31,31,31,30,29,30,29,30,30],
    26:[2026,31,32,31,32,31,30,30,30,29,29,30,31],
    27:[2027,30,32,31,32,31,30,30,30,29,30,29,31],
    28:[2028,31,31,32,31,31,31,30,29,30,29,30,30],
    29:[2029,31,31,32,31,32,30,30,29,30,29,30,30],
    30:[2030,31,32,31,32,31,30,30,30,29,29,30,31],
    31:[2031,30,32,31,32,31,30,30,30,29,30,29,31],
    32:[2032,31,31,32,31,31,31,30,29,30,29,30,30],
    33:[2033,31,31,32,32,31,30,30,29,30,29,30,30],
    34:[2034,31,32,31,32,31,30,30,30,29,29,30,31],
    35:[2035,30,32,31,32,31,31,29,30,30,29,29,31],
    36:[2036,31,31,32,31,31,31,30,29,30,29,30,30],
    37:[2037,31,31,32,32,31,30,30,29,30,29,30,30],
    38:[2038,31,32,31,32,31,30,30,30,29,29,30,31],
    39:[2039,31,31,31,32,31,31,29,30,30,29,30,30],
    40:[2040,31,31,32,31,31,31,30,29,30,29,30,30],
    41:[2041,31,31,32,32,31,30,30,29,30,29,30,30],
    42:[2042,31,32,31,32,31,30,30,30,29,29,30,31],
    43:[2043,31,31,31,32,31,31,29,30,30,29,30,30],
    44:[2044,31,31,32,31,31,31,30,29,30,29,30,30],
    45:[2045,31,32,31,32,31,30,30,29,30,29,30,30],
    46:[2046,31,32,31,32,31,30,30,30,29,29,30,31],
    47:[2047,31,31,31,32,31,31,30,29,30,29,30,30],
    48:[2048,31,31,32,31,31,31,30,29,30,29,30,30],
    49:[2049,31,32,31,32,31,30,30,30,29,29,30,30],
    50:[2050,31,32,31,32,31,30,30,30,29,30,29,31],
    51:[2051,31,31,31,32,31,31,30,29,30,29,30,30],
    52:[2052,31,31,32,31,31,31,30,29,30,29,30,30],
    53:[2053,31,32,31,32,31,30,30,30,29,29,30,30],
    54:[2054,31,32,31,32,31,30,30,30,29,30,29,31],
    55:[2055,31,31,32,31,31,31,30,29,30,29,30,30],
    56:[2056,31,31,32,31,32,30,30,29,30,29,30,30],
    57:[2057,31,32,31,32,31,30,30,30,29,29,30,31],
    58:[2058,30,32,31,32,31,30,30,30,29,30,29,31],
    59:[2059,31,31,32,31,31,31,30,29,30,29,30,30],
    60:[2060,31,31,32,32,31,30,30,29,30,29,30,30],
    61:[2061,31,32,31,32,31,30,30,30,29,29,30,31],
    62:[2062,30,32,31,32,31,31,29,30,29,30,29,31],
    63:[2063,31,31,32,31,31,31,30,29,30,29,30,30],
    64:[2064,31,31,32,32,31,30,30,29,30,29,30,30],
    65:[2065,31,32,31,32,31,30,30,30,29,29,30,31],
    66:[2066,31,31,31,32,31,31,29,30,30,29,29,31],
    67:[2067,31,31,32,31,31,31,30,29,30,29,30,30],
    68:[2068,31,31,32,32,31,30,30,29,30,29,30,30],
    69:[2069,31,32,31,32,31,30,30,30,29,29,30,31],
    70:[2070,31,31,31,32,31,31,29,30,30,29,30,30],
    71:[2071,31,31,32,31,31,31,30,29,30,29,30,30],
    72:[2072,31,32,31,32,31,30,30,29,30,29,30,30],
    73:[2073,31,32,31,32,31,30,30,30,29,29,30,31],
    74:[2074,31,31,31,32,31,31,30,29,30,29,30,30],
    75:[2075,31,31,32,31,31,31,30,29,30,29,30,30],
    76:[2076,31,32,31,32,31,30,30,30,29,29,30,30],
    77:[2077,31,32,31,32,31,30,30,30,29,30,29,31],
    78:[2078,31,31,31,32,31,31,30,29,30,29,30,30],
    79:[2079,31,31,32,31,31,31,30,29,30,29,30,30],
    80:[2080,31,32,31,32,31,30,30,30,29,29,30,30],
    81:[2081,31,31,32,32,31,30,30,30,29,30,30,30],
    82:[2082,30,32,31,32,31,30,30,30,29,30,30,30],
    83:[2083,31,31,32,31,31,30,30,30,29,30,30,30],
    84:[2084,31,31,32,31,31,30,30,30,29,30,30,30],
    85:[2085,31,32,31,32,30,31,30,30,29,30,30,30],
    86:[2086,30,32,31,32,31,30,30,30,29,30,30,30],
    87:[2087,31,31,32,31,31,31,30,30,29,30,30,30],
    88:[2088,30,31,32,32,30,31,30,30,29,30,30,30],
    89:[2089,30,32,31,32,31,30,30,30,29,30,30,30],
    90:[2090,30,32,31,32,31,30,30,30,29,30,30,30]
};

function nepaliToEnglish(a,e,t){
    let n=0,r=3,l=0,o=[0,31,28,31,30,31,30,31,31,30,31,30,31], s=[0,31,29,31,30,31,30,31,31,30,31,30,31];//leap

    if(isValidDate(parseInt(a),parseInt(e),parseInt(t))){
        for(let e=0;e<a-2e3;e++){
            for(let a=1;a<=12;a++){
                n+=getData(2e3+l)[a]
            }
            l++
        }
        for(let a=1;a<e;a++)
            data=getData(2e3+l),
            n+=data[a];n+=t;let i=13,u=4,h=1943,d=null;
        for(;0!=n;)
            d=isLeapYear(h)?s[u]:o[u],
            ++i>d&&(i=1,++u>12&&(h++,u=1)),++r>7&&(r=1),n--;

        let y=r;const g={};
        return g.year=h,g.month=u,g.date=i,g.day=days[r],g.nmonth=nmonth[u],g.numDay=y,g
    }
        return console.log("Invalid date"),{error:"Please enter valid date range"}
}

const nepaliMonthList={
    1:"Baisakh",
    2:"Jestha",
    3:"Ashadh",
    4:"Shrawan",
    5:"Bhadra",
    6:"Ashoj",
    7:"Kartik",
    8:"Mangsir",
    9:"Poush",
    10:"Magh",
    11:"Falgun",
    12:"Chaitra"
},
nepaliMonthMap={
    Baisakh:1,
    Jestha:2,
    Ashadh:3,
    Shrawan:4,
    Bhadra:5,
    Ashoj:6,
    Kartik:7,
    Mangsir:8,
    Poush:9,
    Magh:10,
    Falgun:11,
    Chaitra:12
},
days={
    1:"Sunday",
    2:"Monday",
    3:"Tuesday",
    4:"Wednesday",
    5:"Thursday",
    6:"Friday",
    7:"Saturday"
},
nmonth={
    1:"January",
    2:"February",
    3:"March",
    4:"April",
    5:"May",
    6:"June",
    7:"July",
    8:"August",
    9:"September",
    10:"October",
    11:"November",
    12:"December"
},
nmonthMap={
    January:1,
    February:2,
    March:3,
    April:4,
    May:5,
    June:6,
    July:7,
    August:8,
    September:9,
    October:10,
    November:11,
    December:12
};

function getData(a){
    for(let e=0;e<=Object.keys(nepaliDates).length;e++)
    if(nepaliDates[e][0]==a)
    return nepaliDates[e]
}

function isValidDate(a,e,t){
    if(a<2e3||a>2090)
    return!1;
    let n=getData(a);
    return!(e<1||e>12)&&!(t>n[e]||t<1)
}

function isLeapYear(a){
    return a%100==0?a%400==0:a%4==0
}

function englishToNepali(a,e,t){
    let n=isValidRange(a,e,t);
    if(console.log(n),n){
        let n=[31,28,31,30,31,30,31,31,30,31,30,31],
        r=[31,29,31,30,31,30,31,31,30,31,30,31],
        l=1944,o=2e3,s=9,i=16,u=0,h=6;

        for(let e=0;e<a-l;e++)
        if(!0===isLeapYear(l+e))
            for(let a=0;a<12;a++)
            u+=r[a];
            else for(let a=0;a<12;a++)
            u+=n[a];

        for(let t=0;t<e-1;t++)
        !0===isLeapYear(a)?u+=r[t]:u+=n[t];
            u+=t;
            let d=0,y=s;
            total_nDays=i;
            let g=s,D=o;

        for(;0!=u;){
            let a=getData(o+d)[y];
            total_nDays++,
            h++,
            total_nDays>a&&(g++,total_nDays=1,y++),h>7&&(h=1),g>12&&(D++,g=1),y>12&&(y=1,d++),u--
        }

        numDay=h;
        const c={};
        return c.year=D,c.month=g,c.date=total_nDays,c.day=days[h],c.nmonth=nepaliMonthList[g],c.numDay=numDay,c   
    }
    return{
        error:"Please enter valid date range"
    }
}
            
function isValidRange(a,e,t){
    return a<1944||a>2033?(console.log("Invalid Year"),
    !1):e<1||e>12?(console.log("Invalid month"),
    !1):!(t<1||t>31)||(console.log("Invalid Date"),
    !1)
}